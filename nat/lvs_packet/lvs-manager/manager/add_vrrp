#!/usr/bin/perl

my $lib_path=`echo $0 | sed "s/\$(basename $0)//g"`;
chomp($lib_path);
$lib_path =~ s/\/$//;
require("$lib_path/common");

my $lvs_tool = "$lib_path/bvsadm";

my $cmd = `basename $0`;
chomp($cmd);
my $param_str = $cmd;

my $i;
for ($i = 1; $i <= $#ARGV; $i++) {
    chomp($ARGV[$i]);
    $param_str .= " ".$ARGV[$i];
}

my ($status_code, $param) = get_cmd_param("$param_str");
my $lvs_path = get_value("$param_str", " lvs_path=");
my $state = get_value("$param_str", " state=");
my $prio = get_value("$param_str", " priority=");
my $old_state = $state;
my $old_prio = $prio;

chomp($status_code);

if ($status_code eq 0) {
    opendir(TEMP, $lvs_path) || die "Cannot open $lvs_path:$!";
    my @FILES = readdir TEMP;
    for(my $index = 0; $index < @FILES; $index++) {
	if ($FILES[$index] =~ "qihoo.net") {
	    chdir "$lvs_path/$FILES[$index]";
	    print "config cmd:\t$lvs_tool $param\n";
	    my $ret = `$lvs_tool $param`;
	    if ($? ne 0) {
		print("lvs config failed: $lvs_tool $param, $ret\n");
	    	if ($ret =~ /already exist/) {
		    next;
                } 
		exit 1;	
	    } else {
		print "Success\n";
	    }
	    $old_state = $state;
	    $old_prio = $prio;
	    if ($state eq "MASTER") {
		$state = "BACKUP";
		$prio = 90;
	    } else {
		$state = "MASTER";
		$prio = 110;
	    }
	    $param =~ s/state=$old_state/state=$state/g;
	    $param =~ s/priority=$old_prio/priority=$prio/g;
	}
    }
    closedir(TEMP);

} else {
    write_msg($status_code);   
}

