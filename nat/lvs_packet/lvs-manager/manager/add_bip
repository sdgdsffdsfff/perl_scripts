#!/usr/bin/perl

my $lib_path=`echo $0 | sed "s/\$(basename $0)//g"`;
chomp($lib_path);
$lib_path =~ s/\/$//;

chomp($lib_path);
require("$lib_path/common");

my $lvs_tool = "$lib_path/bvsadm";

my $cmd = `basename $0`;
chomp($cmd);
my $param_str = $cmd;

my $i;
for ($i = 0; $i <= $#ARGV; $i++) {
    chomp($ARGV[$i]);
    $param_str .= " ".$ARGV[$i];
}

my ($status_code, $param) = get_cmd_param("$param_str");
my $lvs_path = get_value("$param_str", " lvs_path=");

chomp($status_code);


if ($status_code eq 0) {
    opendir(TEMP, $lvs_path) || die "Cannot open $lvs_path:$!";
    my @FILES = readdir TEMP;
    for(my $index = 0; $index < @FILES; $index++){
	if ($FILES[$index] =~ "qihoo.net") {
	    print "$lvs_path/$FILES[$index]\n";
	    chdir "$lvs_path/$FILES[$index]";
	    my $pwd = `pwd`;
	    my @static_ip = `$lvs_tool get_static_ip | grep dev`;
	    
	    foreach my $sip (@static_ip) {
		my @array = split(/\s+/, $sip);
		my $dev = $array[2];
		my ($bip, $mask) = split(/\//, $array[0]);
		
		chomp($bip);
		chomp($mask);
		chomp($dev);
		$param =~ s/(bip=[^\s]+)/bip=$bip/g;
		$param =~ s/(dev=[^\s]+)/dev=$dev/g;
		$param =~ s/(mask=[^\s]+)/mask=$mask/g;
		#print "param:\t$param\n";
		my $ret = `$lvs_tool $param`;
		if ($? ne 0) {
		    print "lvs config failed: $lvs_tool $param, $ret\n";
		    if ($ret =~ /already exist/) {
                        next;
                    } 
		    exit 1;
		} else {
		    print "Success\n";
		}
	    }
	    my @dev_bip = `$lvs_tool get_dev_bip | grep dev`;
	    if ($#dev_bip >= 0) {
		foreach my $bip (@dev_bip) {
		    my @array = split(/\s+/, $bip);
		    my $dev = $array[2];
		    my ($bip, $mask) = split(/\//, $array[0]);
		    chomp($bip);
		    chomp($mask);
		    chomp($dev);
		    
		    $param =~ s/(bip=[^\s]+)/bip=$bip/g;
		    $param =~ s/(dev=[^\s]+)/dev=$dev/g;
		    $param =~ s/(mask=[^\s]+)/mask=$mask/g;
		    #print "param:\t$param\n";
		    my $ret = `$lvs_tool $param`;
		    if ($? ne 0) {
			print "lvs config failed: $lvs_tool $param, $ret\n";
			if ($ret =~ /already exist/) {
			    next;
			} 
			exit 1;
		    } else {
			print "Success\n";
		    }
		}
	    }
	}
    }
} else {
    write_msg($status_code);   
}

