#!/usr/bin/perl

my $lib_path=`echo $0 | sed "s/\$(basename $0)//g"`;
chomp($lib_path);
$lib_path =~ s/\/$//;
require("$lib_path/common");

my $lvs_tool = "$lib_path/bvsadm";
my $cmd = `basename $0`;
chomp($cmd);
my $param_str = $cmd;

my $i;
for ($i = 1; $i <= $#ARGV; $i++) {
    chomp($ARGV[$i]);
    $param_str .= " ".$ARGV[$i];
}

my ($status_code, $param) = get_rs_cmd_param("$param_str");
my $lvs_path = get_value("$param_str", " lvs_path=");
chomp($status_code);

if ($status_code eq 0) {
    opendir(TEMP, $lvs_path) || die "Cannot open $lvs_path:$!";
    my @FILES = readdir TEMP;
    my $rips = get_value("$param_str", " rip=");

    if (!$rips) {
	$status_code = 20;
	closedir(TEMP);
	write_msg($status_code);    
    }
    my @rip_array = split(/:/, $rips);
    for(my $index = 0; $index < @FILES; $index++) {
	if ($FILES[$index] =~ "qihoo.net") {
	    chdir "$lvs_path/$FILES[$index]";
	    foreach my $rip (@rip_array) {
		$param =~ s/(rip=[^\s]+)/rip=$rip/g;
		print "lvs config cmd: $lvs_tool $param\n";
		my $ret = `$lvs_tool $param`;
		if ($? ne 0) {
		    print "lvs config failed: $lvs_tool $param\n";
		    exit 1;
		} else {
		    print "Success\n";
		}
	    }
	}
    }
    closedir(TEMP);
} else {
    write_msg($status_code);   
}

